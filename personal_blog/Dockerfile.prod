###########
# BUILDER #
###########

FROM python:3.9.6-alpine as builder

# set work directory
WORKDIR /usr/src/personal_blog

# set environment variables
ENV PYTHONDONTWRITEBYTECODE 1
ENV PYTHONUNBUFFERED 1

# install psycopg2 dependencies
RUN apk update \
    && apk add postgresql-dev libjpeg zlib-dev jpeg-dev gcc python3-dev musl-dev

# install dependencies
RUN pip install --upgrade pip
COPY ./requirements.txt .
RUN pip wheel --no-cache-dir --no-deps --wheel-dir /usr/src/personal_blog/wheels -r requirements.txt

#########
# FINAL #
#########

# pull official base image
FROM python:3.9.6-alpine

# create directory for the app user
RUN mkdir -p /home/personal_blog

# create the app user
RUN addgroup -S personal_blog && adduser -S personal_blog -G personal_blog

# create the appropriate directories
ENV HOME=/home/personal_blog
ENV APP_HOME=/home/personal_blog/web
RUN mkdir $APP_HOME
#RUN mkdir $APP_HOME/staticfiles
#RUN mkdir $APP_HOME/mediafiles
WORKDIR $APP_HOME

# install dependencies
RUN apk update && apk add libpq libjpeg
COPY --from=builder /usr/src/personal_blog/wheels /wheels
COPY --from=builder /usr/src/personal_blog/requirements.txt .
RUN pip install --no-cache /wheels/*

# copy entrypoint.prod.sh
COPY ./entrypoint.prod.sh .
RUN sed -i 's/\r$//g' $APP_HOME/entrypoint.prod.sh
RUN chmod +x $APP_HOME/entrypoint.prod.sh

# copy project
COPY . $APP_HOME

# chown all the files to the app user
RUN chown -R personal_blog:personal_blog $APP_HOME

# change to the app user
USER personal_blog

# run entrypoint.prod.sh
ENTRYPOINT ["/home/personal_blog/web/entrypoint.prod.sh"]