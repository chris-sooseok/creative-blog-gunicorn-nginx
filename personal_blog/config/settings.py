"""
Django settings for config project.
Generated by 'django-admin startproject' using Django 3.2.3.
For more information on this file, see
https://docs.djangoproject.com/en/3.2/topics/settings/
For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.2/ref/settings/
"""

from pathlib import Path
import socket
import os


# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = os.environ.get("DJANGO_SECRET_KEY")

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = os.environ.get('DJANGO_DEBUG', default=False)

ALLOWED_HOSTS = os.environ.get("ALLOWED_HOSTS").split(" ")
# change
# Application definition
# use this text to make commit

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'whitenoise.runserver_nostatic',
    'django.contrib.staticfiles',
    'django.contrib.sites',

    # third party
    'crispy_forms',
    'ckeditor',
    'ckeditor_uploader',
    'debug_toolbar',
    'requests',
    'allauth',
    'allauth.account',
    'bs4',
    'storages',
    'accounts',
]

APPS = ["main","todos", "notes", "people", "books"]
INSTALLED_APPS = INSTALLED_APPS + APPS
DISPLAY_APPS = ["todos", "notes"]

SITE_ID = 1
AUTHENTICATION_BACKENDS = (
    'django.contrib.auth.backends.ModelBackend',
    'allauth.account.auth_backends.AuthenticationBackend',
)

EMAIL_BACKEND = 'django.core.mail.backends.console.EmailBackend'

# ---- ALLAUTH SETTING ----
AUTH_USER_MODEL ='accounts.CustomUser'

LOGIN_REDIRECT_URL = 'home'
#LOGOUT_REDIRECT_URL = 'home'
ACCOUNT_LOGOUT_REDIRECT = 'home'

ACCOUNT_SESSION_REMEMBER = True
ACCOUNT_SESSION_REMEMBER = True
ACCOUNT_SIGNUP_PASSWORD_ENTER_TWICE = False
ACCOUNT_USERNAME_REQUIRED = False
ACCOUNT_AUTHENTICATION_METHOD = 'email'
ACCOUNT_EMAIL_REQUIRED = True
ACCOUNT_UNIQUE_EMAIL = True
# ---- ALLAUTH SETTING END ----


# django-debug-toolbar
hostname, _, ips = socket.gethostbyname_ex(socket.gethostname())
INTERNAL_IPS = [ip[:-1] + "1" for ip in ips]


# ---- DEPLOYMENT CHECKLIST ----
#SECURE_SSL_REDIRECT = os.environ.get("DJANGO_SECURE_SSL_REDIRECT", default=True)
#SECURE_HSTS_SECONDS = os.environ.get("DJANGO_SECURE_HSTS_SECONDS", default=2592000)
#SECURE_HSTS_INCLUDE_SUBDOMAINS = os.environ.get("DJANGO_SECURE_HSTS_INCLUDE_SUBDOMAINS", default=True)
#SECURE_HSTS_PRELOAD = os.environ.get("DJANGO_SECURE_HSTS_PRELOAD", default=True)
#SESSION_COOKIE_SECURE = os.environ.get("DJANGO_SESSION_COOKIE_SECURE", default=True)
#CSRF_COOKIE_SECURE = os.environ.get("DJANGO_CSRF_COOKIE_SECURE", default=True)
#SECURE_PROXY_SSL_HEADER = ('HTTP_X_FORWARDED_PROTO', 'https')
# ---- DEPLOYMENT CHECKLIST END -----




MIDDLEWARE = [
    #'django.middleware.cache.UpdateCacheMiddleware',
    'django.middleware.security.SecurityMiddleware',
    'whitenoise.middleware.WhiteNoiseMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'debug_toolbar.middleware.DebugToolbarMiddleware',
    #'django.middleware.cache.FetchFromCacheMiddleware',
]

ROOT_URLCONF = 'config.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [str(BASE_DIR.joinpath('templates'))],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'todos.custom_context_processor.current_date_renderer',
                'main.custom_context_processor.apps',
            ],
            'libraries':{
                'custom_filter': 'main.custom_filter',
            }
        },
    },
]

WSGI_APPLICATION = 'config.wsgi.application'


# Database
# https://docs.djangoproject.com/en/3.2/ref/settings/#databases

DATABASES = {
    "default": {
        "ENGINE": os.environ.get("SQL_ENGINE", "django.db.backends.sqlite3"),
        "NAME": os.environ.get("SQL_DATABASE", BASE_DIR / "db.sqlite3"),
        "USER": os.environ.get("SQL_USER", "user"),
        "PASSWORD": os.environ.get("SQL_PASSWORD", "password"),
        "HOST": os.environ.get("SQL_HOST", "localhost"),
        "PORT": os.environ.get("SQL_PORT", "5432"),
    }
}


# Password validation
# https://docs.djangoproject.com/en/3.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'Asia/Seoul'

USE_I18N = True

USE_L10N = True

USE_TZ = True

# Default primary key field type
# https://docs.djangoproject.com/en/3.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'



CRISPY_TEMPLATE_PACK = 'bootstrap4'


# ---- S3 SETTING -----
USE_S3 = os.getenv('USE_S3') == 'TRUE'

if USE_S3 == True:
    # aws settings
    AWS_ACCESS_KEY_ID = os.getenv('AWS_ACCESS_KEY_ID')
    AWS_SECRET_ACCESS_KEY = os.getenv('AWS_SECRET_ACCESS_KEY')
    S3_BUCKET = os.getenv('S3_BUCKET')
    AWS_LOCATION = "ap-northeast-2"
    AWS_DEFAULT_ACL = 'public-read'
    AWS_S3_DOMAIN = '%s.s3.amazonaws.com' % S3_BUCKET
    AWS_S3_OBJECT_PARAMETERS = {'CacheControl': 'max-age=86400'}
    AWS_S3_SIGNATURE_VERSION = 's3v4'
    # to use ckeditor through s3
    AWS_QUERYSTRING_AUTH = False
    # s3 static settings
    STATIC_LOCATION = 'static'
    STATIC_URL = f'https://{AWS_S3_DOMAIN}/{STATIC_LOCATION}/'
    STATICFILES_STORAGE = 'config.storage_backends.StaticStorage'
    ADMIN_MEDIA_PREFIX = STATIC_URL + 'admin/'
    # s3 public media settings
    AWS_MEDIA_LOCATION = 'media'
    MEDIA_URL = f'https://{AWS_S3_DOMAIN}/{AWS_MEDIA_LOCATION}/'
    MEDIA_ROOT = f'https://{AWS_S3_DOMAIN}/{AWS_MEDIA_LOCATION}/'
    DEFAULT_FILE_STORAGE = 'config.storage_backends.MediaStorage'
else:
    STATIC_URL = '/static/'
    STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')
    MEDIA_URL = '/mediafiles/'
    MEDIA_ROOT = os.path.join(BASE_DIR, 'mediafiles')

STATICFILES_DIRS = (os.path.join(BASE_DIR, 'static'),)
#STATIC_URL = '/static/'
#STATIC_ROOT = str(BASE_DIR.joinpath('staticfiles')) # new
#STATICFILES_FINDERS = [ # new
#    "django.contrib.staticfiles.finders.FileSystemFinder",
#   "django.contrib.staticfiles.finders.AppDirectoriesFinder",
#]
#
#STATICFILES_STORAGE = 'whitenoise.storage.CompressedManifestStaticFilesStorage' # new

#MEDIA_URL = '/media/'
#MEDIA_ROOT = str(BASE_DIR.joinpath('media'))

#PUBLIC_MEDIA_LOCATION = 'media'
#MEDIA_URL = f'https://{AWS_S3_CUSTOM_DOMAIN}/{PUBLIC_MEDIA_LOCATION}/'
#DEFAULT_FILE_STORAGE = 'config.storage_backends.PublicMediaStorage'
#MEDIA_ROOT = f"https://{AWS_S3_CUSTOM_DOMAIN}/media/"
#
#PRIVATE_MEDIA_LOCATION = 'private'
#PRIVATE_FILE_STORAGE = 'config.storage_backends.PrivateMediaStorage'

# ---- S3 SETTING END -----



# ---- CKEDITOR SETTING -----
CKEDITOR_UPLOAD_PATH = "uploads/"

CKEDITOR_CONFIGS = {
    'default': {
        'toolbar': 'Custom',
        'height':  700,
        'width': 'auto',
        'toolbar_Custom': [
            ['Link', 'Image', 'CodeSnippet'],
            ['ShowBlocks','Templates','JustifyLeft', 'JustifyCenter', 'JustifyRight'],
            ['NumberedList', 'BulletedList'],
            [ 'Table', 'HorizontalRule'],
            ['Styles', 'Format', 'Font', 'FontSize','TextColor', 'BGColor','Bold', 'Italic', 'Underline' ],
        ],
        'extraPlugins': 'codesnippet'
    },
    "book": {
        'toolbar': 'BookCustom',
        'height':  700,
        'width': 'auto',
        'toolbar_BookCustom': [
            ['CodeSnippet'],
            ['ShowBlocks','Templates','JustifyLeft', 'JustifyCenter', 'JustifyRight'],
            ['NumberedList', 'BulletedList'],
            [ 'Table', 'HorizontalRule'],
            ['Styles', 'Format', 'Font', 'FontSize','TextColor', 'BGColor' ],
        ],
    }   
}

# ---- CKEDITOR SETTING END -----



CACHE_MIDDLEWARE_ALIAS = 'default'
CACHE_MIDDLEWARE_SECONDS = 604800
CACHE_MIDDLEWARE_KEY_PREFIX = ''